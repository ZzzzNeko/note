import{_ as e,o as a,c as t,V as o}from"./chunks/framework.3b22bc79.js";const u=JSON.parse('{"title":"属性功能","description":"","frontmatter":{},"headers":[],"relativePath":"程序/前端基础/html/04 属性功能.md","filePath":"程序/前端基础/html/04 属性功能.md","lastUpdated":1687109729000}'),r={name:"程序/前端基础/html/04 属性功能.md"},n=o('<h1 id="属性功能" tabindex="-1">属性功能 <a class="header-anchor" href="#属性功能" aria-label="Permalink to &quot;属性功能&quot;">​</a></h1><h2 id="锚点" tabindex="-1">锚点 <a class="header-anchor" href="#锚点" aria-label="Permalink to &quot;锚点&quot;">​</a></h2><p>链接中带有 <code>#xxx</code> 的部分，在跳转的同时，会定位到页面对应 id 元素(注，name 跳转已废弃)的位置</p><h2 id="可编辑属性" tabindex="-1">可编辑属性 <a class="header-anchor" href="#可编辑属性" aria-label="Permalink to &quot;可编辑属性&quot;">​</a></h2><p>使用方法，如<div contenteditable="true"></div> <span contenteditable="true"></span> 解决需求： 显示未知长度的文本，或者编辑未知长度的文本，如果使用传统的 textrarea，需要配合 js 代码才能实现文本内容撑开 textarea 高度，使其完整显示 如果利用块级元素内容撑开高度的特性即可完成上述需求，利用 html5 中的标签属性 contenteditable 可以设置标签内容为可编辑的。</p>',5),_=[n];function d(i,s,c,l,h,p){return a(),t("div",null,_)}const f=e(r,[["render",d]]);export{u as __pageData,f as default};
