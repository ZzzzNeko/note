import{_ as s,v as a,b as n,R as l}from"./chunks/framework.ecc14119.js";const C=JSON.parse('{"title":"概念介绍","description":"","frontmatter":{},"headers":[],"relativePath":"程序/项目管理/打包工具 - webpack/01 概念介绍.md","filePath":"程序/项目管理/打包工具 - webpack/01 概念介绍.md","lastUpdated":1687958817000}'),p={name:"程序/项目管理/打包工具 - webpack/01 概念介绍.md"},o=l(`<h1 id="概念介绍" tabindex="-1">概念介绍 <a class="header-anchor" href="#概念介绍" aria-label="Permalink to &quot;概念介绍&quot;">​</a></h1><p>webpack 是一个 js 应用程序的静态模块打包器, 通过分析应用程序的依赖, 构建出依赖关系图, 并依此生成一或多个 bundle 。</p><h2 id="核心概念" tabindex="-1">核心概念 <a class="header-anchor" href="#核心概念" aria-label="Permalink to &quot;核心概念&quot;">​</a></h2><table><thead><tr><th>概念</th><th>说明</th></tr></thead><tbody><tr><td>模式(mode)</td><td>当前的运行环境, webpack 在相应模式下有内置的优化处理</td></tr><tr><td>入口(entry)</td><td>项目的入口起点, webpack 将以此作为依赖分析的起点</td></tr><tr><td>出口(output)</td><td>项目的输出终点, webpack 将以此输出构建生成的 bundles</td></tr><tr><td>加载器(loader)</td><td>项目的文件引入, webpack 将将借此处理其他非 <code>js</code> 文件的引入</td></tr><tr><td>插件(plugins)</td><td>项目的其他配置, webpack 将依此实现高定制的环境搭建</td></tr></tbody></table><h2 id="常用术语" tabindex="-1">常用术语 <a class="header-anchor" href="#常用术语" aria-label="Permalink to &quot;常用术语&quot;">​</a></h2><table><thead><tr><th>名词</th><th>说明</th></tr></thead><tbody><tr><td>Chunk</td><td>用来构建的代码块， 即 Bundle 的原材料</td></tr><tr><td>Bundle</td><td>将一或多个模块构建后生成的打包文件, 即 Chunk 构建后的产品</td></tr><tr><td>Vendor Entry Point</td><td>第三方库入口点</td></tr><tr><td>Dependency Graph</td><td>依赖关系图, 由 webpack 根据入口起点模块的依赖关系分析得到</td></tr><tr><td>Hot Module Replacement</td><td>热模块替换, 当模块内容变化时, 响应其变化但无需重新加载页面</td></tr><tr><td>Tree Shaking</td><td>摇树, 移除冗余代码，实现代码量最小化</td></tr></tbody></table><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><ol><li>基础依赖: <code>npm i webpack webpack-cli --save-dev</code> , 其中 &#39;webpack-cli&#39; 可使用 &#39;webpack-command&#39; 代替</li><li>默认路径: webpack 默认使用 &#39;src/index.js&#39; 作为文件入口, 并将构建后文件输出至 &#39;dist/main.js&#39; 中</li><li>运行构建: 使用 <code>npx webpack</code> 运行构建或配置相应的 npm scripts</li></ol><h2 id="构建流程" tabindex="-1">构建流程 <a class="header-anchor" href="#构建流程" aria-label="Permalink to &quot;构建流程&quot;">​</a></h2><p>配置文件</p><ul><li>不存在 <code>webpack.config.js</code> 文件，将根据默认配置进行构建</li><li>若存在 <code>webpack.config.js</code> 文件，将依据配置文件进行构建</li><li>使用 <code>npx webpack --config &lt;file&gt;</code> 选项可以指定配置文件具体路径</li><li>默认配置文件路径为根目录下的 <code>webpack.config.js</code> 文件</li></ul><p>构建路径</p><ul><li>源目录: 用于存放开发环境下的代码, 是入口配置的默认目录, 目录名为 <code>src</code></li><li>分发目录: 用于存放生产环境下的代码, 是出口配置的默认目录, 目录名为 <code>dist</code></li><li>默认的入口文件路径为 <code>src/index.js</code></li><li>默认的出口文件路径为 <code>dist/main.js</code></li><li>默认将 <code>src</code> 目录下的文件进行构建输出到 <code>dist</code> 目录中</li></ul><h2 id="配置指令" tabindex="-1">配置指令 <a class="header-anchor" href="#配置指令" aria-label="Permalink to &quot;配置指令&quot;">​</a></h2><p>通过配置 npm scripts 可以使用 npm 指令进行统一的命令行操作</p><p><strong>package.json</strong></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webpack-dev-server --mode=development</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webpack --mode=production --config webpack.config.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>此时可以通过使用 <code>npm run build</code> 指令可以运行构建</p><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><p>一个配置文件通常的格式如下</p><p><strong>webpack.config.js</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> path </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//用于处理模块路径</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> webpack </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webpack</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//用于引入webpack内的模块</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// mode 可选 &#39;development&#39; / &#39;production&#39;, 但通常在 npm scripts 中指定</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 入口配置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">output</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 出口配置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">module</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">rules</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 加载器相关配置</span></span>
<span class="line"><span style="color:#A6ACCD;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 插件相关配置</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">resolve</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 模块解析相关配置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">devtool</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// source map 相关配置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">devServer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// webpack-dev-server 相关配置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">optimization</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 优化处理相关配置</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">externals</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 外部扩展相关配置, 即在 bundle 中去除指定依赖, 该选项通常用于构建目标为 library 的场景</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div>`,22),e=[o];function t(c,r,D,i,y,d){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{C as __pageData,A as default};
