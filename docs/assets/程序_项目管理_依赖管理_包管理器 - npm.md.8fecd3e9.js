import{_ as s,o as n,c as a,V as l}from"./chunks/framework.9dc355db.js";const m=JSON.parse('{"title":"包管理器 - npm","description":"","frontmatter":{},"headers":[],"relativePath":"程序/项目管理/依赖管理/包管理器 - npm.md","filePath":"程序/项目管理/依赖管理/包管理器 - npm.md","lastUpdated":1687958817000}'),e={name:"程序/项目管理/依赖管理/包管理器 - npm.md"},o=l(`<h1 id="包管理器-npm" tabindex="-1">包管理器 - npm <a class="header-anchor" href="#包管理器-npm" aria-label="Permalink to &quot;包管理器 - npm&quot;">​</a></h1><h2 id="配置代理" tabindex="-1">配置代理 <a class="header-anchor" href="#配置代理" aria-label="Permalink to &quot;配置代理&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://registry.npm.taobao.org</span></span></code></pre></div><h2 id="常用指令" tabindex="-1">常用指令 <a class="header-anchor" href="#常用指令" aria-label="Permalink to &quot;常用指令&quot;">​</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 初始化项目，会根据问答创建一个 package.json 文件</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 全局安装, windows下与node.exe同目录，UNIX下通常是/usr/local/lib/node_modules目录</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">module_name</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 安装到当前项目</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">## --save(简写 -S) 表示生产环境依赖, 写入 dependencies 字段</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">## --save-dev(简写 -D) 表示开发环境依赖, 写入 devDependencies 字段</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save</span><span style="color:#A6ACCD;"> [moudle_name]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 卸载(简写 npm un [moudle_name])</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">uninstall</span><span style="color:#A6ACCD;"> [moudle_name]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 搜索-远程: 列出搜索匹配的包信息(版本、日期、作者 等)</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">search</span><span style="color:#A6ACCD;"> [module_name]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 搜索-本地: 列出项目安装的包信息(版本、路径、依赖 等)</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list</span><span style="color:#A6ACCD;"> [module_name]</span></span></code></pre></div><h2 id="npm-scripts" tabindex="-1">npm scripts <a class="header-anchor" href="#npm-scripts" aria-label="Permalink to &quot;npm scripts&quot;">​</a></h2><p>通过配置 <code>scripts</code> 字段可以通过 <code>npm run [script]</code> 在命令行执行</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node index.js</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="本地-link" tabindex="-1">本地 link <a class="header-anchor" href="#本地-link" aria-label="Permalink to &quot;本地 link&quot;">​</a></h2><p><code>npm link</code> 通常用于本地包之间的相互引用</p><ul><li><code>npm link</code>: 从当前包路径中创建一个符号链接到全局</li><li><code>npm link [&lt;@scope&gt;/]&lt;pkg&gt;[@&lt;version&gt;]</code>: 链接已经存在的全局包</li><li><code>npm unlink</code>: 从全局中删除当前包的符号链接</li><li><code>npm unlink [&lt;@scope&gt;/]&lt;pkg&gt;[@&lt;version&gt;]</code>: 删除当前引用的全局包链接</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// linked-package</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">linked</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// npm link</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// npm link linked-package</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> linked </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">linked-package</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">linked</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>说明</p><ul><li><code>npm link</code> 根据 <code>package.json</code> 中的 <code>name</code> 属性创建链接包名</li><li><code>npm link &lt;pkg&gt;</code> 会在本地创建包的软链接，其内容随源包内容变化</li></ul><h2 id="项目发布" tabindex="-1">项目发布 <a class="header-anchor" href="#项目发布" aria-label="Permalink to &quot;项目发布&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 通过 npm 创建一个账号</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 登录 npm</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">login</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看当前用户</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">whoami</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 发布(发布前需要确保 name 和 version 合规)</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">publish</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 删除</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--force</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">unpublish</span></span></code></pre></div><p>说明: 版本管理依赖于 <code>package.json</code>, 需要关注以下字段</p><ul><li>主要信息: <code>name</code>、<code>version</code>、<code>author</code>、<code>description</code>、<code>repository</code>、<code>license</code></li><li>次要信息: <code>keywords</code>、<code>homepage</code>、<code>contributors</code>、<code>maintainers</code></li><li>项目内容: <ul><li>模块类型: <code>type</code>(取值 &#39;commonjs&#39;(默认) 和 &#39;module&#39;)</li><li>入口文件: <code>main</code>(对应 commonjs 引入)、<code>module</code>(对应 esm 引入)</li><li>依赖文件: <code>files</code>(支持目录)</li><li>声明文件: <code>types</code></li><li>其他信息: <code>exports</code>、<code>bin</code>、<code>dependencies</code>、<code>devDependencies</code>、<code>engines</code> 等</li></ul></li></ul><p>发布内容</p><ul><li>默认包含: <code>package.json</code> 和 <code>readme.md</code> 文件</li><li>规则排除: <code>.gitignore</code> 和 <code>.npmignore</code> 指定的内容将忽略</li><li>指定包含: <code>package.json</code> 配置的 <code>files</code></li></ul><h2 id="npx" tabindex="-1">npx <a class="header-anchor" href="#npx" aria-label="Permalink to &quot;npx&quot;">​</a></h2><p>若包支持二进制脚本(通常为 <code>bin</code> 中配置的脚本)，使用时通常需要在 <code>scripts</code> 进行对应的配置，再通过 <code>npm run</code> 去间接运行 <br><code>npx</code> 则可以跳过上述的流程，直接执行, 如 <code>npx create-next-app</code> <br> 若本地没有安装依赖包 <code>npx</code> 会搜索并安装并在脚本执行后进行删除 (减少一次性命令的污染)</p>`,24),p=[o];function c(t,i,r,d,y,C){return n(),a("div",null,p)}const A=s(e,[["render",c]]);export{m as __pageData,A as default};
