import{_ as s,v as l,b as a,R as o}from"./chunks/framework.ecc14119.js";const F=JSON.parse('{"title":"变量运算","description":"","frontmatter":{},"headers":[],"relativePath":"程序/前端基础/sass/04 变量运算.md","filePath":"程序/前端基础/sass/04 变量运算.md","lastUpdated":1687109729000}'),n={name:"程序/前端基础/sass/04 变量运算.md"},e=o(`<h1 id="变量运算" tabindex="-1">变量运算 <a class="header-anchor" href="#变量运算" aria-label="Permalink to &quot;变量运算&quot;">​</a></h1><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h2><ul><li>定义变量: 以 <code>$</code> 符号开头，后接变量名，如 <code>$baseColor</code></li><li>变量赋值 <ul><li>基本赋值，使用冒号分隔，赋值内容可以为变量，如 <code>$baseColor: #ccc</code></li><li>使用 <code>!default</code> 给变量赋默认值，如 <code>$baseColor: grey !default</code><ul><li>如果变量已被赋值，则不会被重新赋值</li><li>如果变量未被赋值，则会被重新赋值</li><li>如果变量为 <code>null</code> 值，则视为未被赋值，即会被重新赋值</li></ul></li></ul></li><li>使用变量: 直接使用即可，如 <code>p{ color: $baseColor }</code></li><li>作用范围 <ul><li>定义在块内的变量只在该代码块内生效(局部变量)</li><li>定义在块外的变量在整个样式表中生效(全局变量)</li><li>使用 <code>!global</code> 可以将局部变量转换为全局变量</li></ul></li></ul><p>示例:</p><div class="language-sass"><button title="Copy Code" class="copy"></button><span class="lang">sass</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$base-grey: </span><span style="color:#89DDFF;">#ccc</span></span>
<span class="line"><span style="color:#A6ACCD;">$base-border: </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;font-style:italic;">px</span><span style="color:#A6ACCD;"> solid $base-grey</span></span>
<span class="line"><span style="color:#FFCB6B;">.rect</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border</span><span style="color:#A6ACCD;">: $base-border</span></span></code></pre></div><p>编译后:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">rect</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ccc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="插值语句" tabindex="-1">插值语句 <a class="header-anchor" href="#插值语句" aria-label="Permalink to &quot;插值语句&quot;">​</a></h2><p>通过 <code>#{}</code> 插值语句可以将值混入到注释、选择器、属性名中，插值语句可以避免 SassScript 的表达式运算</p><h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h2><p>SassScript 支持以下数据类型</p><ul><li>数字: 可以含单位， 如 <code>0</code>, <code>100px</code></li><li>字符串: 包括又引号和无引号字符串 <ul><li>有引号字符串，如 <code>&quot;http://xxx.com&quot;</code></li><li>无引号字符串，如 <code>bold</code><ul><li>使用插值 <code>#{}</code> 时，有引号字符串将被编译为无引号字符串</li><li>在压缩模式下避免使用插值来表示颜色，应始终引用命名颜色</li><li>一些特殊值将被视为无引号字符串，如 <code>!important</code></li></ul></li></ul></li><li>布尔值: <code>true</code> 和 <code>false</code></li><li>空值: <code>null</code></li><li>List: 相当于 js 中的数组，如 <code>0 auto</code><ul><li>使用空格进行分割，如 <code>0 auto</code></li><li>使用逗号进行分割，编译后将保留逗号，逗号一般用于强调数组的结构关系</li><li>使用圆括号进行分割 <ul><li>圆括号相当于 js 中的 <code>[]</code>，如 <code>(1px 1px) (0 0)</code></li><li>单独的圆括号表示空数组，不可直接编译</li><li>若数组中包含空数组或空值，编译时将被清除</li></ul></li></ul></li><li>Maps: 相当于 js 中的 object，如 <code>(key1: val1, key2: val2)</code><ul><li>可以视为键值对的集合，相当于 js 中的 <code>object</code></li><li>必须使用圆括号包裹，每组键值对通过逗号分割，键值通过冒号分割</li><li>键和值可以时 SassScript 中任何对象</li><li>在 List 函数中 Maps 会被转换为 List ，反之则不能</li></ul></li></ul><h2 id="运算" tabindex="-1">运算 <a class="header-anchor" href="#运算" aria-label="Permalink to &quot;运算&quot;">​</a></h2><ul><li>通用运算 <ul><li><code>==</code>, <code>!=</code> 适用于所有数据类型</li></ul></li><li>数字运算 <ul><li>支持关系运算 <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></li><li>支持数字的 <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code> 运算，<strong>对于不同的单位可以进行一定的转换</strong></li></ul></li></ul><h3 id="除法运算" tabindex="-1">除法运算 <a class="header-anchor" href="#除法运算" aria-label="Permalink to &quot;除法运算&quot;">​</a></h3><p>css 中 <code>/</code> 可以起到分割的作用，SassScript 在以下情况将其视为除法运算</p><ul><li>如果值或值的一部分使用变量或函数返回值表示</li><li>如果值被圆括号包裹</li><li>如果值是算术表达式的一部分</li></ul><p>在某些情况下需要避免变量之间的运算，可以使用插值 <code>#{}</code> 语法</p><p>示例</p><div class="language-sass"><button title="Copy Code" class="copy"></button><span class="lang">sass</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$size: </span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;font-style:italic;">px</span></span>
<span class="line"><span style="color:#A6ACCD;">$line: </span><span style="color:#F78C6C;">36</span><span style="color:#89DDFF;font-style:italic;">px</span></span>
<span class="line"><span style="color:#FFCB6B;">.p1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font</span><span style="color:#A6ACCD;">: </span><span style="color:#F78C6C;">24</span><span style="color:#89DDFF;font-style:italic;">px</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">36</span><span style="color:#89DDFF;font-style:italic;">px</span></span>
<span class="line"><span style="color:#FFCB6B;">.p2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font</span><span style="color:#A6ACCD;">: $size </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> $line</span></span>
<span class="line"><span style="color:#FFCB6B;">.p3</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font</span><span style="color:#A6ACCD;">: </span><span style="color:#82AAFF;">#{</span><span style="color:#A6ACCD;">$size</span><span style="color:#82AAFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">#{</span><span style="color:#A6ACCD;">$line</span><span style="color:#82AAFF;">}</span></span></code></pre></div><p>编译后</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">p1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24px</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">36px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">p2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.66667</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">p3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24px</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">36px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="颜色运算" tabindex="-1">颜色运算 <a class="header-anchor" href="#颜色运算" aria-label="Permalink to &quot;颜色运算&quot;">​</a></h3><p>颜色的运算会对组成当前颜色的 红、绿、蓝 三色进行分别计算，之后再进行合并</p><ul><li>支持颜色与颜色，颜色与数组之间的运算</li><li>如果单色的运算值小于 <code>00</code> 则取 <code>00</code></li><li>如果单色的运算值大于 <code>ff</code> 则取 <code>ff</code></li><li>如果 rgba 或 hsla 表示的颜色进行计算时，颜色的 alpha (用于表示透明度) 值必须相等</li></ul><h3 id="字符串运算" tabindex="-1">字符串运算 <a class="header-anchor" href="#字符串运算" aria-label="Permalink to &quot;字符串运算&quot;">​</a></h3><p>SassScript 中使用 <code>+</code> 用于字符串的连接</p><ul><li>无引号字符串之间的连接: 字符串相连，生成新的无引号字符串</li><li>有引号字符串之间的连接: 字符串相连，生成新的有引号字符串</li><li>无引号字符串连接有引号字符串: 字符串相连，生成新的无引号字符串</li><li>有引号字符串连接无引号字符串: 字符串相连，生成新的有引号字符串</li></ul><h3 id="布尔运算" tabindex="-1">布尔运算 <a class="header-anchor" href="#布尔运算" aria-label="Permalink to &quot;布尔运算&quot;">​</a></h3><p>SassScript 支持以下布尔运算</p><ul><li><code>and</code></li><li><code>or</code></li><li><code>not</code></li></ul><p>注意: 空字符串会被转换为 <code>true</code></p><h3 id="数组运算" tabindex="-1">数组运算 <a class="header-anchor" href="#数组运算" aria-label="Permalink to &quot;数组运算&quot;">​</a></h3><p>数组无支持的运算方式，只能通过 list functions 控制</p><h3 id="圆括号" tabindex="-1">圆括号 <a class="header-anchor" href="#圆括号" aria-label="Permalink to &quot;圆括号&quot;">​</a></h3><p>使用圆括号可以改变运算的顺序</p>`,36),p=[e];function c(t,i,r,d,C,y){return l(),a("div",null,p)}const u=s(n,[["render",c]]);export{F as __pageData,u as default};
