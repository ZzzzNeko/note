import{_ as s,o,c as a,V as e}from"./chunks/framework.bbae8ef5.js";const d=JSON.parse('{"title":"vue3: vue-router","description":"","frontmatter":{},"headers":[],"relativePath":"程序/框架生态/vue/vue3 vue-router.md","filePath":"程序/框架生态/vue/vue3 vue-router.md","lastUpdated":1689694838000}'),l={name:"程序/框架生态/vue/vue3 vue-router.md"},n=e(`<h1 id="vue3-vue-router" tabindex="-1">vue3: vue-router <a class="header-anchor" href="#vue3-vue-router" aria-label="Permalink to &quot;vue3: vue-router&quot;">​</a></h1><p>与 vue3 对应的版本: <a href="https://router.vuejs.org/zh/" target="_blank" rel="noreferrer"><code>vue-router 4.x</code></a></p><p>vue-router4 核心内容并不太大变化, 这里描述常用的 迁移性 变动</p><h2 id="路由的使用" tabindex="-1">路由的使用 <a class="header-anchor" href="#路由的使用" aria-label="Permalink to &quot;路由的使用&quot;">​</a></h2><h3 id="路由的创建" tabindex="-1">路由的创建 <a class="header-anchor" href="#路由的创建" aria-label="Permalink to &quot;路由的创建&quot;">​</a></h3><p>主要调整有</p><ul><li>创建调整为 组合式 API</li><li><code>mode</code> 调整为 <code>history</code> 并使用函数替换 <ul><li><code>createWebHistory(base?)</code>: 原 <code>mode: &#39;history&#39;</code></li><li><code>createWebHashHistory(base?)</code>: 原 <code>mode: &#39;hash&#39;</code></li><li><code>createMemoryHistory(base?)</code>: 一般用于 SSR</li></ul></li><li><code>base</code> 调整至 <code>history</code> 提供的函数</li><li><code>scrollBehavior</code> 原返回值 <code>{ x, y }</code> 调整为 <code>{ left, top }</code></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> App </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./App.vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createApp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createRouter</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createWebHistory</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createWebHashHistory</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createMemoryHistory</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-router</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> router </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createRouter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">history</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createWebHistory</span><span style="color:#A6ACCD;">(base</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  routes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> []</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  scrollBehavior</span></span>
<span class="line"><span style="color:#A6ACCD;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">const app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createApp</span><span style="color:#A6ACCD;">(App)</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(router)</span></span></code></pre></div><h3 id="组件中使用" tabindex="-1">组件中使用 <a class="header-anchor" href="#组件中使用" aria-label="Permalink to &quot;组件中使用&quot;">​</a></h3><p>组件中使用保留了选项式 API 的方式, 同时提供了组合式 API 的函数</p><ul><li>访问路由 <ul><li><code>useRoute()</code>: 等于 <code>this.$route</code></li><li><code>useRouter()</code>: 等于 <code>this.$router</code></li></ul></li><li>路由守卫 <ul><li><code>onBeforeRouteLeave(to, from)</code>: 等于 <code>beforeRouteLeave</code> 钩子</li><li><code>onBeforeRouteUpdate(to, from, next)</code> 等于 <code>beforeRouteUpdate</code> 钩子</li><li>注意: <code>beforeRouteEnter</code> 钩子并没有对应的 组合式 API， 因为其阶段早于 <code>setup</code> (需要使用 选项式 API 描述)</li></ul></li><li>链接相关 <ul><li><code>useLink(props: VueUseOptions&lt;RouterLinkOptions&gt;)</code>: 对 <code>RouterLink</code> 进行解析</li><li><code>RouterLink</code>: 路由链接信息</li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">useRoute</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">useRouter</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">useLink</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">RouterLink</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">onBeforeRouteLeave</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">onBeforeRouteUpdate</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-router</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> route </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useRoute</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> router </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useRouter</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="内置组件变动" tabindex="-1">内置组件变动 <a class="header-anchor" href="#内置组件变动" aria-label="Permalink to &quot;内置组件变动&quot;">​</a></h2><ul><li><code>&lt;router-view&gt;</code> 增加了 <code>slot</code> 内容: <code>&lt;router-view v-slot=&quot;{ Component, route }&quot;&gt;</code><ul><li><code>&lt;keep-alive&gt;</code>、<code>&lt;transition&gt;</code> 因而需要在 <code>&lt;router-view&gt;</code> 内部使用</li></ul></li><li><code>&lt;router-link&gt;</code> 增加了 <code>slot</code> 内容: <code>&lt;router-link v-slot=&quot;{ route, href, isActive, isExactActive, navigate }&quot;&gt;</code><ul><li><code>navigate</code> 为导航函数, 若要自定义 <code>tag</code>, 直接在内部插入对应元素即可</li><li>移除了 <code>append</code>、<code>event</code>、<code>tag</code>、<code>exact</code> 属性</li></ul></li></ul><h2 id="配置项变动" tabindex="-1">配置项变动 <a class="header-anchor" href="#配置项变动" aria-label="Permalink to &quot;配置项变动&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 路径正则的变动</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> routes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 匹配任意路径</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/:pathMatch(.*)*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 匹配任意一级路径(注意少了个 &#39;*&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/:pathMatch(.*)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="其他变动" tabindex="-1">其他变动 <a class="header-anchor" href="#其他变动" aria-label="Permalink to &quot;其他变动&quot;">​</a></h2><p>参考 <a href="https://router.vuejs.org/zh/guide/migration/" target="_blank" rel="noreferrer">迁移文档</a></p>`,18),p=[n];function t(c,r,i,D,y,u){return o(),a("div",null,p)}const A=s(l,[["render",t]]);export{d as __pageData,A as default};
