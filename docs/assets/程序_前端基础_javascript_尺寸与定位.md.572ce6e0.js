import{_ as l,v as o,b as e,R as s}from"./chunks/framework.cc13f38d.js";const F=JSON.parse('{"title":"尺寸与定位","description":"","frontmatter":{},"headers":[],"relativePath":"程序/前端基础/javascript/尺寸与定位.md","filePath":"程序/前端基础/javascript/尺寸与定位.md","lastUpdated":1687190476000}'),a={name:"程序/前端基础/javascript/尺寸与定位.md"},n=s(`<h1 id="尺寸与定位" tabindex="-1">尺寸与定位 <a class="header-anchor" href="#尺寸与定位" aria-label="Permalink to &quot;尺寸与定位&quot;">​</a></h1><h2 id="元素尺寸与定位" tabindex="-1">元素尺寸与定位 <a class="header-anchor" href="#元素尺寸与定位" aria-label="Permalink to &quot;元素尺寸与定位&quot;">​</a></h2><h3 id="元素尺寸" tabindex="-1">元素尺寸 <a class="header-anchor" href="#元素尺寸" aria-label="Permalink to &quot;元素尺寸&quot;">​</a></h3><ul><li>元素自身尺寸 <ul><li><code>el.offsetHeight</code> : 元素自身高度；包含元素内部高度、垂直内边距、垂直边框、水平滚动条高度(如果存在)，不含元素外边距</li><li><code>el.offsetWidth</code> : 元素自身宽度；包含元素内部宽度、水平内边距、水平边框、垂直滚动条高度(如果存在)，不含元素外边距</li></ul></li><li>元素视口尺寸 <ul><li><code>el.clientHeight</code> : 元素视口高度；包含元素内部高度、垂直内边距，不含水平滚动条高度(如果存在)、元素边框、外边距</li><li><code>el.clientWidth</code> : 元素视口宽度；包含元素内部宽度、水平内边距，不含垂直滚动条宽度(如果存在)、元素边框、外边距</li></ul></li><li>元素内容尺寸 <ul><li><code>el.scrollHeight</code> : 元素内容高度；包含元素内容高度、垂直内边距、由于内容溢出导致视图中不可见内容的高度，不含元素边框、外边距</li><li><code>el.scrollWidth</code> : 元素内容宽度；包含元素内容宽度、水平内边距、由于内容溢出导致视图中不可见内容的宽度，不含元素边框、外边距</li></ul></li></ul><h3 id="元素定位" tabindex="-1">元素定位 <a class="header-anchor" href="#元素定位" aria-label="Permalink to &quot;元素定位&quot;">​</a></h3><ul><li>定位元素 <ul><li><code>el.offsetParent</code> : 元素最近的定位元素 <ul><li>若无定位元素，则为最近的 <code>table</code> 、 <code>table-cell</code> 或根元素(标准模式下为 html ，怪异模式下为 body )</li><li>若元素为 <code>display: none</code> ，该值为 <code>null</code></li></ul></li></ul></li><li>元素自身(相对定位元素)定位 <ul><li><code>el.offsetTop</code> : 元素相对于其 <code>offsetParent</code> 元素上边界的偏移距离</li><li><code>el.offsetLeft</code> : 元素相对于其 <code>offsetParent</code> 元素左边界的偏移距离</li></ul></li><li>元素内容(相对元素本身)定位 <ul><li><code>el.scrollTop</code> : 元素内容垂直滚动的距离，如果该元素没有滚动条则该值为 <code>0</code></li><li><code>el.scrollLeft</code> : 元素内容水平滚动的距离，如果该元素没有滚动条则该值为 <code>0</code></li></ul></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 获取元素相对文档定位</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getPos</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pos</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> left</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> top</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">obj</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pos</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bhj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetLeft</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pos</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">bhj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetTop</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">obj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetParent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pos</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="文档尺寸与滚动" tabindex="-1">文档尺寸与滚动 <a class="header-anchor" href="#文档尺寸与滚动" aria-label="Permalink to &quot;文档尺寸与滚动&quot;">​</a></h2><h3 id="文档渲染模式" tabindex="-1">文档渲染模式 <a class="header-anchor" href="#文档渲染模式" aria-label="Permalink to &quot;文档渲染模式&quot;">​</a></h3><ul><li><code>document.compatMode</code> : 文档渲染模式 <ul><li><code>BackCompat</code> : 怪异模式，该模式下使用 <code>document.body</code> 指代文档</li><li><code>CSS1Compat</code> : 标准模式，该模式下使用 <code>document.documentElement</code> 指代文档(该属性指向文档对象的根元素)</li></ul></li><li>注：下面用 <code>doc</code> 指代文档，不同渲染模式下自行替换</li></ul><h3 id="文档尺寸" tabindex="-1">文档尺寸 <a class="header-anchor" href="#文档尺寸" aria-label="Permalink to &quot;文档尺寸&quot;">​</a></h3><ul><li>文档自身尺寸 <ul><li><code>doc.offsetHeight</code> : 文档元素高度</li><li><code>doc.offsetWidth</code> : 文档元素宽度</li></ul></li><li>文档视口尺寸 <ul><li><code>doc.clientHeight</code> : 文档视口高度</li><li><code>doc.clientWidth</code> : 文档视口宽度</li></ul></li><li>文档内容尺寸 <ul><li><code>doc.scrollHeight</code> : 文档内容高度</li><li><code>doc.scrollWidth</code> : 文档内容宽度</li></ul></li></ul><h3 id="文档滚动" tabindex="-1">文档滚动 <a class="header-anchor" href="#文档滚动" aria-label="Permalink to &quot;文档滚动&quot;">​</a></h3><ul><li>文档内容(相对文档)滚动 <ul><li><code>doc.scrollTop</code> : 文档内容垂直滚动的距离</li><li><code>doc.scrollLeft</code> : 文档内容水平滚动的距离</li></ul></li></ul><h2 id="浏览器尺寸与滚动" tabindex="-1">浏览器尺寸与滚动 <a class="header-anchor" href="#浏览器尺寸与滚动" aria-label="Permalink to &quot;浏览器尺寸与滚动&quot;">​</a></h2><h3 id="浏览器尺寸" tabindex="-1">浏览器尺寸 <a class="header-anchor" href="#浏览器尺寸" aria-label="Permalink to &quot;浏览器尺寸&quot;">​</a></h3><ul><li>浏览器自身尺寸 <ul><li><code>window.outerHeight</code> : 浏览器自身的高度(整个浏览器高度)</li><li><code>window.outerWidth</code> : 浏览器自身的宽度(整个浏览器宽度)</li></ul></li><li>浏览器视口尺寸 <ul><li><code>window.innerHeight</code> : 浏览器视口高度(包括水平滚动条高度)，注：视口即用于页面展示的部分</li><li><code>window.innerWidth</code> : 浏览器视口宽度(包括垂直滚动条宽度)，注：视口即用于页面展示的部分</li></ul></li></ul><h3 id="浏览器滚动" tabindex="-1">浏览器滚动 <a class="header-anchor" href="#浏览器滚动" aria-label="Permalink to &quot;浏览器滚动&quot;">​</a></h3><ul><li><code>window.scrollY</code> : 文档在垂直方向上滚动的距离</li><li><code>window.scrollX</code> : 文档再水平方向上滚动的距离</li><li><code>window.pageYOffset</code> : 该值为 <code>window.scrollY</code> 的别名</li><li><code>window.pageXOffset</code> : 该值为 <code>window.scrollX</code> 的别名</li></ul><h2 id="屏幕尺寸" tabindex="-1">屏幕尺寸 <a class="header-anchor" href="#屏幕尺寸" aria-label="Permalink to &quot;屏幕尺寸&quot;">​</a></h2><ul><li><code>window.screen</code> : 屏幕对象</li><li><code>window.screen.height</code> : 屏幕高度</li><li><code>window.screen.width</code> : 屏幕宽度</li><li><code>window.screenTop</code> : 浏览器 Y 轴相对于屏幕左上角坐标（有的浏览器也可用 screenY）</li><li><code>window.screenLeft</code> : 浏览器 X 轴相对于屏幕左上角坐标（有的浏览器也可用 screenX）</li></ul>`,21),c=[n];function t(i,p,d,r,h,u){return o(),e("div",null,c)}const D=l(a,[["render",t]]);export{F as __pageData,D as default};
