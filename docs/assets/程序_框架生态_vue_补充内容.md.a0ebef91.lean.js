import{_ as s,v as o,b as a,R as l}from"./chunks/framework.ecc14119.js";const C=JSON.parse('{"title":"补充内容","description":"","frontmatter":{},"headers":[],"relativePath":"程序/框架生态/vue/补充内容.md","filePath":"程序/框架生态/vue/补充内容.md","lastUpdated":1690826311000}'),n={name:"程序/框架生态/vue/补充内容.md"},p=l(`<h1 id="补充内容" tabindex="-1">补充内容 <a class="header-anchor" href="#补充内容" aria-label="Permalink to &quot;补充内容&quot;">​</a></h1><h2 id="深度作用选择器" tabindex="-1">深度作用选择器 <a class="header-anchor" href="#深度作用选择器" aria-label="Permalink to &quot;深度作用选择器&quot;">​</a></h2><p>该场景常用于修改引入的组件的样式, 并保持 scoped 的性质</p><p><a href="https://vue-loader.vuejs.org/zh/guide/scoped-css.html" target="_blank" rel="noreferrer">https://vue-loader.vuejs.org/zh/guide/scoped-css.html</a></p><p>语法</p><ul><li><code>.xxx &gt;&gt;&gt; .yyy</code>: 用于 <code>css</code></li><li><code>.xxx /deep/ .yyy</code>: 多层级存在问题(仅 chrome 有效，原因 chrome 自身支持 <code>/deep/</code> ，但该特性已废弃)</li><li><code>::v-deep</code>: <code>vue3</code> 中废弃</li><li><code>:deep(.xxx)</code>: 目前的语法 (未找到文档)</li></ul><p>说明</p><ul><li>该文档为 <code>webpack</code> 中的 <code>loader</code></li><li><code>vite</code> <code>vue3</code> 构建下核心机制转移到 <code>@vue/compiler-sfc</code> 中</li><li><code>@vue/compiler-sfc</code> 中已经不推荐 <code>::v-deep</code> 的写法，改为 <code>:deep(.xx-selector)</code></li></ul><h2 id="手动修改组件-props" tabindex="-1">手动修改组件 props <a class="header-anchor" href="#手动修改组件-props" aria-label="Permalink to &quot;手动修改组件 props&quot;">​</a></h2><p>一般通过修改组件传递的参数即可, 若需要通过代码实现可以参考以下内容</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">SomeComp</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demoComp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">somePropName</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">oldVal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onMounted</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> compInstance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">onMounted</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">compInstance</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">props</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">somePropName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">newVal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,11),e=[p];function t(c,r,D,F,y,d){return o(),a("div",null,e)}const A=s(n,[["render",t]]);export{C as __pageData,A as default};
