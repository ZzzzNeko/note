import{_ as l,o as e,c as i,V as a}from"./chunks/framework.bbae8ef5.js";const _=JSON.parse('{"title":"跨源资源共享(CORS)","description":"","frontmatter":{},"headers":[],"relativePath":"程序/网络通信/跨域通信/02-01 跨域通信 - CORS.md","filePath":"程序/网络通信/跨域通信/02-01 跨域通信 - CORS.md","lastUpdated":1688401094000}'),t={name:"程序/网络通信/跨域通信/02-01 跨域通信 - CORS.md"},o=a('<h1 id="跨源资源共享-cors" tabindex="-1">跨源资源共享(CORS) <a class="header-anchor" href="#跨源资源共享-cors" aria-label="Permalink to &quot;跨源资源共享(CORS)&quot;">​</a></h1><p>CORS(Cross-Origin Resource Sharing)，是一种跨源访问处理机制，通过使用额外的 HTTP 首部信息告知从浏览器应用中发起的跨源请求是否被允许。</p><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><p>CORS 允许在以下场景中使用跨源 HTTP 请求，这里仅以 Ajax 作为示例</p><ul><li>Ajax (XMLHttpRequest/Fetch)</li><li>Web 字体(@font-face)</li><li>WebGL 贴图</li><li>使用 drawImage 将 images/video 画面绘制到 canvas</li><li>cssom</li></ul><h2 id="请求流程" tabindex="-1">请求流程 <a class="header-anchor" href="#请求流程" aria-label="Permalink to &quot;请求流程&quot;">​</a></h2><ol><li>浏览器根据请求方式和首部信息决定发送简单请求或预检请求</li><li>浏览器在发送请求时将自动添加特定的首部字段</li><li>服务器会对请求进行处理或确认(预检请求是否通过，是否需要携带身份凭证)</li><li>服务器将设置特定的首部字段对跨源请求进行响应</li><li>浏览器接受响应后判断拦截或解析</li></ol><p>注：CORS 请求失败时，处于安全考虑，浏览器将不会展示具体错误信息</p><h3 id="对-cors-安全的首部字段" tabindex="-1">对 CORS 安全的首部字段 <a class="header-anchor" href="#对-cors-安全的首部字段" aria-label="Permalink to &quot;对 CORS 安全的首部字段&quot;">​</a></h3><p>以下字段为对 CORS 安全的首部字段</p><ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Content-Type(仅限于于以下取值) <ul><li>text/plain</li><li>multipart/form-data</li><li>application/x-www-form-urlencoded</li></ul></li></ul><h3 id="简单请求" tabindex="-1">简单请求 <a class="header-anchor" href="#简单请求" aria-label="Permalink to &quot;简单请求&quot;">​</a></h3><p>简单请求将跳过预检阶段直接发起请求，需要满足以下要求</p><ul><li>使用指定的请求方式之一 <ul><li>get</li><li>post</li><li>head</li></ul></li><li>http 请求首部字段属于【对 CORS 安全的首部字段】</li></ul><h3 id="预检请求" tabindex="-1">预检请求 <a class="header-anchor" href="#预检请求" aria-label="Permalink to &quot;预检请求&quot;">​</a></h3><p>对于可能对服务器数据产生副作用的请求，浏览器会先通过 OPTIONS 方法发起一次预检请求，以确定服务器是否允许该实际请求。</p><p>当满足任一以下请求条件时，将发送预检请求</p><ul><li>使用指定的请求方式之一 <ul><li>put</li><li>delete</li><li>connect</li><li>options</li><li>trace</li><li>patch</li></ul></li><li>设置了【对 CORS 安全的首部字段】之外的 http 请求头字段, 或 content-type 值</li><li>请求中的 XMLHttpRequestUpload 对象注册任意多个事件监听器</li><li>请求中使用了 ReadableStream 对象</li></ul><p>预检请求会自动设置 <code>Access-Control-Request-Method</code> 和 <code>Access-Control-Request-Headers</code> 字段通知服务器正式请求使用的方法和额外字段</p><h3 id="身份凭证" tabindex="-1">身份凭证 <a class="header-anchor" href="#身份凭证" aria-label="Permalink to &quot;身份凭证&quot;">​</a></h3><p>Ajax 请求可以基于 HTTP cookies 和 HTTP 认证信息发送身份凭证，若需要发送身份凭证信息需要以下处理。</p><p>浏览器</p><ul><li>对于跨源 Ajax 请求，默认不会发送身份凭证信息</li><li>设置 <code>xhr.withCredentials = true</code> 会在发送请求时附带身份凭证信息</li></ul><p>服务器</p><ul><li>需要设置 <code>Access-Control-Allow-Credentials: true</code> 首部字段否则浏览器将不处理响应结果</li><li>不得设置 <code>Access-Control-Allow-Origin: *</code>，需要指定具体的源而非通配符</li></ul><h2 id="首部字段" tabindex="-1">首部字段 <a class="header-anchor" href="#首部字段" aria-label="Permalink to &quot;首部字段&quot;">​</a></h2><p>这里列举 CORS 中可能用到的首部字段</p><h3 id="http-请求首部字段-浏览器自动设置" tabindex="-1">HTTP 请求首部字段(浏览器自动设置) <a class="header-anchor" href="#http-请求首部字段-浏览器自动设置" aria-label="Permalink to &quot;HTTP 请求首部字段(浏览器自动设置)&quot;">​</a></h3><ul><li><code>Origin: &lt;origin&gt;</code><ul><li>用于预检请求和正式请求</li><li>表明发送请求的源</li><li>该请求无论是否跨源，总是被发送</li></ul></li><li><code>Access-Control-Request-Method: &lt;method&gt;</code><ul><li>用于预检请求</li><li>表明正式请求时使用的 HTTP 方法</li></ul></li><li><code>Access-Control-Request-Headers: &lt;field-name&gt;[, &lt;field-name&gt;]*</code><ul><li>用于预检请求</li><li>表明正式请求时所携带的首部字段</li></ul></li></ul><h3 id="http-响应首部字段" tabindex="-1">HTTP 响应首部字段 <a class="header-anchor" href="#http-响应首部字段" aria-label="Permalink to &quot;HTTP 响应首部字段&quot;">​</a></h3><ul><li><code>Access-Control-Allow-Methods: &lt;method&gt;[, &lt;method&gt;]*</code><ul><li>用于预检请求的响应</li><li>指定正式请求允许的 HTTP 方法</li></ul></li><li><code>Access-Control-Allow-Headers: &lt;field-name&gt;[, &lt;field-name&gt;]*</code><ul><li>用于预检请求的响应</li><li>指定正式请求中允许携带的首部字段</li></ul></li><li><code>Access-Control-Allow-Origin: &lt;origin&gt; | *</code><ul><li>表示允许指定源的请求</li><li>对于未携带身份凭证的请求可配置通配符 &#39;*&#39;</li></ul></li><li><code>Access-Control-Expose-Headers: &lt;some-header&gt;[, &lt;other-header&gt;]</code><ul><li>浏览器可通过 <code>xhr.getResponseHeader()</code> 方法获取基本的响应头信息</li><li>该字段用于配置浏览器可额外访问的首部字段白名单</li></ul></li><li><code>Access-Control-Max-Age: &lt;delta-seconds&gt;</code><ul><li>指定预检请求结果可被缓存时间(单位秒)</li><li>对于已缓存的未过期预检请求可跳过预检阶段直接发送</li></ul></li><li><code>Access-Control-Allow-Credentials: true</code><ul><li>浏览器设置 <code>credentials</code> 为 <code>true</code> 时需要设置该首部字段</li><li>设置为 <code>true</code> 时，浏览器才会处理响应中的内容，否则将忽略该响应</li></ul></li></ul><h2 id="浏览器兼容性" tabindex="-1">浏览器兼容性 <a class="header-anchor" href="#浏览器兼容性" aria-label="Permalink to &quot;浏览器兼容性&quot;">​</a></h2><ul><li>IE10+ 已提供完整的支持</li><li>IE8、9 中使用 <code>XDomainRequest</code> 对象实现</li></ul><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="noreferrer">HTTP 访问控制（CORS）</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/CORS" target="_blank" rel="noreferrer">CORS</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest" target="_blank" rel="noreferrer">XMLHttpRequest</a></li></ul>',35),r=[o];function c(d,s,n,h,u,p){return e(),i("div",null,r)}const m=l(t,[["render",c]]);export{_ as __pageData,m as default};
